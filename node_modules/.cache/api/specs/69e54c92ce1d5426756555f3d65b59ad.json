{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenSea Testnets API",
    "version": "unknown"
  },
  "servers": [
    {
      "url": "https://testnets-api.opensea.io/"
    }
  ],
  "components": {
    "securitySchemes": {
      "sec0": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY",
        "x-default": "5bec8ae0372044cab1bef0d866c98618"
      }
    }
  },
  "security": [
    {
      "sec0": []
    }
  ],
  "paths": {
    "/assets": {
      "get": {
        "summary": "Retrieving assets - Testnets",
        "description": "",
        "operationId": "retrieving-assets-rinkeby",
        "parameters": [
          {
            "name": "owner",
            "in": "query",
            "description": "The address of the owner of the assets",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_ids",
            "in": "query",
            "description": "An array of token IDs to search for (e.g. `?token_ids=1&token_ids=209`). Will return a list of assets with token_id matching any of the IDs in this array.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asset_contract_address",
            "in": "query",
            "description": "The NFT contract address for the assets",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asset_contract_addresses",
            "in": "query",
            "description": "An array of contract addresses to search for (e.g. `?asset_contract_addresses=0x1...&asset_contract_addresses=0x2...`). Will return a list of assets with contracts matching any of the addresses in this array. If \"token_ids\" is also specified, then it will only return assets that match each `(address, token_id)` pairing, respecting order.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "How to order the assets returned. By default, the API returns the fastest ordering. Options you can set are `sale_date` (the last sale's transaction's timestamp), `sale_count` (number of sales), and `sale_price` (the last sale's `total_price`)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_direction",
            "in": "query",
            "description": "Can be `asc` for ascending or `desc` for descending",
            "schema": {
              "type": "string",
              "default": "desc"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset",
            "schema": {
              "type": "string",
              "default": "0"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit. Defaults to 20, capped at 50.",
            "schema": {
              "type": "string",
              "default": "20"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "description": "Your optional API Key (contact us to request one!)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection",
            "in": "query",
            "description": "Limit responses to members of a collection.  Case sensitive and must match the collection slug exactly. Will return all assets from all contracts in a collection.  For more information on collections, see our [collections documentation](/reference#retrieving-collections).",
            "schema": {
              "type": "string"
            }
          }
        ],
        "deprecated": false,
        "security": []
      }
    },
    "/events": {
      "get": {
        "summary": "Retrieving events - Testnets",
        "description": "",
        "operationId": "retrieving-events-testnets",
        "parameters": [
          {
            "name": "asset_contract_address",
            "in": "query",
            "description": "The NFT contract address for the assets for which to show events",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_slug",
            "in": "query",
            "description": "Limit responses to events from a collection.  Case sensitive and must match the collection slug exactly. Will return all assets from all contracts in a collection.  For more information on collections, see our [collections documentation](/reference#retrieving-collections).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_id",
            "in": "query",
            "description": "The token's id to optionally filter by",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "account_address",
            "in": "query",
            "description": "A user account's wallet address to filter for events on an account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_type",
            "in": "query",
            "description": "The event type to filter. Can be `created` for new auctions, `successful` for sales, `cancelled`, `bid_entered`, `bid_withdrawn`, `transfer`, or `approve`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "only_opensea",
            "in": "query",
            "description": "Restrict to events on OpenSea auctions. Can be `true` or `false`",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "auction_type",
            "in": "query",
            "description": "Filter by an auction type. Can be `english` for English Auctions, `dutch` for fixed-price and declining-price sell orders (Dutch Auctions), or `min-price` for CryptoPunks bidding auctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset for pagination",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit for pagination",
            "schema": {
              "type": "string",
              "default": "20"
            }
          },
          {
            "name": "occurred_before",
            "in": "query",
            "description": "Only show events listed before this timestamp. Seconds since the Unix epoch.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "occurred_after",
            "in": "query",
            "description": "Only show events listed after this timestamp. Seconds since the Unix epoch.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"asset_events\": [\n        {\n            \"id\": 5005754,\n            \"transaction\": {\n                \"transaction_hash\": \"0xc9306fa50bb6a61af1b46d3ed6ae48704f55412cf689bf9127dbe537b09841f3\",\n                \"block_number\": \"6171110\",\n                \"block_hash\": \"0x0f6d166b22ef93fc72003f7ab627c5f0a77fc04baec00e31b1a34fe1d38f269b\",\n                \"timestamp\": \"2018-08-18T18:55:21\",\n                ...\n            },\n            \"asset\": {\n                \"token_id\": \"3628\",\n                ...\n            },\n            \"winner_account\": {...},\n            \"seller\": {...},\n            \"event_type\": \"successful\",\n            \"total_price\": \"161676394353158989\",\n            ...\n        }\n   ]\n}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/collections": {
      "get": {
        "summary": "Retrieving collections - Testnets",
        "description": "Use this endpoint to fetch collections on OpenSea",
        "operationId": "retrieving-collections-testnets",
        "parameters": [
          {
            "name": "asset_owner",
            "in": "query",
            "description": "A wallet address. If specified, will return collections where the owner owns at least one asset belonging to smart contracts in the collection. The number of assets the account owns is shown as `owned_asset_count` for each collection.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "For pagination. Number of contracts offset from the beginning of the result list.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "For pagination. Maximum number of contracts to return.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 300
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "description": "Your optional API Key (contact us to request one!)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "deprecated": false,
        "security": []
      }
    },
    "/bundles": {
      "get": {
        "summary": "Retrieving bundles - Testnet",
        "description": "Bundles are groups of items for sale on OpenSea. You can buy them all at once in one transaction, and you can create them without any transactions or gas, as long as you've already approved the assets inside.",
        "operationId": "retrieving-bundles-testnet",
        "parameters": [
          {
            "name": "on_sale",
            "in": "query",
            "description": "If set to `true`, only show bundles currently on sale. If set to `false`, only show bundles that have been sold or cancelled.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "owner",
            "in": "query",
            "description": "Account address of the owner of a bundle (and all assets within)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asset_contract_address",
            "in": "query",
            "description": "Contract address of all the assets in a bundle. Only works for homogenous bundles, not mixed ones.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asset_contract_addresses",
            "in": "query",
            "description": "An array of contract addresses to search for (e.g. `?asset_contract_addresses=0x1...&asset_contract_addresses=0x2...`). Will return a list of bundles with assets having contracts that match ALL of the addresses in this array. Useful for querying for mixed bundles, e.g. ones with CryptoKitties AND CK Talisman statues.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_ids",
            "in": "query",
            "description": "A list of token IDs for showing only bundles with at least one of the token IDs in the list",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "For pagination: how many results to return",
            "schema": {
              "type": "string",
              "default": "20"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "For pagination: the index of the result to start at (beginning with 0)",
            "schema": {
              "type": "string",
              "default": "0"
            }
          }
        ],
        "deprecated": false,
        "security": []
      }
    },
    "/asset/{asset_contract_address}/{token_id}/": {
      "get": {
        "summary": "Retrieving a single asset - Testnets",
        "description": "Used to fetch more in-depth information about an individual asset",
        "operationId": "retrieving-a-single-asset-testnets",
        "parameters": [
          {
            "name": "asset_contract_address",
            "in": "path",
            "description": "Address of the contract for this NFT",
            "schema": {
              "type": "string",
              "default": "0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb"
            },
            "required": true
          },
          {
            "name": "token_id",
            "in": "path",
            "description": "Token ID for this item",
            "schema": {
              "type": "string",
              "default": "1"
            },
            "required": true
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "description": "Your optional API Key (contact us to request one!)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_address",
            "in": "query",
            "description": "Address of an owner of the token.  If you include this, the response will include an `ownership` object that includes the number of tokens owned by the address provided instead of the `top_ownerships` object included in the standard response, which provides the number of tokens owned by each of the 10 addresses with the greatest supply of the token..",
            "schema": {
              "type": "string"
            }
          }
        ],
        "deprecated": false,
        "security": []
      }
    },
    "/asset_contract/{asset_contract_address}": {
      "get": {
        "summary": "Retrieving a single contract - Testnets",
        "description": "Used to fetch more in-depth information about an contract asset",
        "operationId": "retrieving-a-single-contract-testnets",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "description": "Your optional API Key (contact us to request one!)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asset_contract_address",
            "in": "path",
            "description": "Address of the contract",
            "schema": {
              "type": "string",
              "default": "0x06012c8cf97bead5deae237070f9587f8e7a266d"
            },
            "required": true
          }
        ],
        "deprecated": false,
        "security": []
      }
    },
    "/collection/{collection_slug}": {
      "get": {
        "summary": "Retrieving a single collection - Testnets",
        "description": "Used for retrieving more in-depth information about individual collections, including real time statistics like floor price",
        "operationId": "retrieving-a-single-collection-testnets",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "description": "Your optional API Key (contact us to request one!)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_slug",
            "in": "path",
            "description": "The collection slug of this collection that is used to uniquely link to this collection on OpenSea",
            "schema": {
              "type": "string",
              "default": "doodles-official"
            },
            "required": true
          }
        ],
        "deprecated": false,
        "security": []
      }
    },
    "/collection/{collection_slug}/stats": {
      "get": {
        "summary": "Retrieving collection stats - Testnets",
        "description": "Use this endpoint to fetch stats for a specific collection, including realtime floor price statistics",
        "operationId": "retrieving-collection-stats-testnets",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "description": "Your optional API Key (contact us to request one!)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_slug",
            "in": "path",
            "description": "The collection slug",
            "schema": {
              "type": "string",
              "default": "doodles-official"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    }
  },
  "x-readme": {
    "headers": []
  },
  "x-readme-fauxas": true
}